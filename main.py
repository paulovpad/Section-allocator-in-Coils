from services.leitor_excel import LeitorExcel
import sys

def mostrar_camadas(bobina, camadas):
    """Exibe a aloca√ß√£o por camadas de forma visual"""
    print("\nüìä DISPOSI√á√ÉO DAS CAMADAS NA BOBINA:")
    print(f"Di√¢metro Interno: {bobina['Di√¢metro Interno (m)']}m")
    print(f"Di√¢metro Externo: {bobina['Di√¢metro Externo (m)']}m\n")
    
    print(f"{'Camada':<7} | {'Linha':<6} | {'Di√¢metro':<9} | {'Raio (m)':<12} | {'Comprimento':<12} | {'Peso (kg)':<10}")
    print("-"*80)
    
    for camada in camadas:
        peso = camada['Comprimento'] * next(
            linha['Peso por Metro (kg/m)'] 
            for linha in linhas_alocadas 
            if linha['ID'] == camada['Linha ID']
        )
        print(f"{camada['Camada']:<7} | {camada['Linha ID']:<6} | "
              f"{camada['Di√¢metro']:>8.3f}m | "
              f"{camada['Raio Interno']:.3f}-{camada['Raio Externo']:.3f}m | "
              f"{camada['Comprimento']:>10}m | "
              f"{peso:>8.1f}")

def main():
    print("=== SISTEMA DE ALOCA√á√ÉO DE LINHAS EM BOBINAS ===")
    
    try:
        # Carregar dados
        caminho = r'C:\Users\paulo.andrade\Desktop\dados.xlsx'
        bobinas = LeitorExcel.ler_bobinas(caminho)
        linhas = LeitorExcel.ler_linhas(caminho)
        
        print(f"\n‚úÖ {len(bobinas)} bobina(s) carregada(s)")
        print(f"‚úÖ {len(linhas)} linha(s) carregada(s)")
        
        # Seleciona a primeira bobina
        bobina = bobinas[0]
        global linhas_alocadas  # Para acesso na fun√ß√£o mostrar_camadas
        linhas_alocadas = []
        
        print("\nüîç ALOCANDO LINHAS POR DI√ÇMETRO (maiores primeiro):")
        for linha in sorted(linhas, key=lambda x: x['Di√¢metro (m)'], reverse=True):
            if linha['Di√¢metro (m)'] <= bobina['Di√¢metro Interno (m)']:
                linhas_alocadas.append(linha)
                print(f"Linha {linha['ID']} (√ò{linha['Di√¢metro (m)']}m) alocada")
        
        # Calcular e mostrar camadas
        camadas = LeitorExcel.calcular_camadas(bobina, linhas_alocadas)
        mostrar_camadas(bobina, camadas)
        
        # RESUMO DE ALOCA√á√ÉO (NOVO)
        if camadas:
            peso_total = sum(
                linha['Comprimento Necess√°rio (m)'] * linha['Peso por Metro (kg/m)']
                for linha in linhas_alocadas
            )
            diametro_final = camadas[-1]['Raio Externo'] * 2
            
            print(f"\n‚öñÔ∏è RESUMO DE ALOCA√á√ÉO:")
            print(f"‚Ä¢ Peso total: {peso_total:.1f} kg (de {bobina['Peso M√°ximo (kg)']} kg dispon√≠veis)")
            print(f"‚Ä¢ Di√¢metro final: {diametro_final:.2f}m (de {bobina['Di√¢metro Externo (m)']}m dispon√≠vel)")
            print(f"‚Ä¢ Espa√ßo utilizado: {diametro_final/bobina['Di√¢metro Externo (m)']:.1%}")
        
    except Exception as e:
        print(f"\n‚õî ERRO: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()